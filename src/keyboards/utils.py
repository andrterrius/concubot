from aiogram.types import *
from aiogram.utils.deep_linking import get_start_link
from src.config import *
from src.utils import *
from .buttons import get_post_button, back_button, otmena_button

async def get_participate_button_conditions(id, data):
    public_buttons = InlineKeyboardMarkup()
    if data['captcha']:
        public_buttons.add(InlineKeyboardButton(text=data['button'], url=await get_webapp(id)))
    else:
        public_buttons.add(InlineKeyboardButton(text=data['button'], callback_data=callback_buttons.new(id=id,
                                                                                                        action="join_concurs_conditions")))
    public_buttons.add(InlineKeyboardButton(text="‚úè–ò–∑–º–µ–Ω–∏—Ç—å —Å–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ‚úè", callback_data=callback_buttons.new(id=id,
                                                                                                       action="join_concurs_edit_conditions")))
    return public_buttons

async def get_participate_button(id, data, participants=None):
    text = f"{data['button']}{f' ({participants})' if participants else ''}"
    public_buttons = InlineKeyboardMarkup()
    if data.get('captcha'):
        public_buttons.add(InlineKeyboardButton(text=text, url=await get_webapp(id)))
    elif data.get('condition'):
        public_buttons.add(InlineKeyboardButton(text=text, url=await get_start_link(id)))
    else:
        public_buttons.add(InlineKeyboardButton(text=text, callback_data=callback_buttons.new(id=id, action="join_concurs")))
    return public_buttons

async def last_create_keyboard(state):
    state_data = await state.get_data()
    return ReplyKeyboardMarkup(resize_keyboard=True)\
        .row(
        KeyboardButton('–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å'), get_post_button)\
        .row(
        KeyboardButton('üÜï–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—èüÜï'),
        KeyboardButton('üî•–í—ã–∫–ª—é—á–∏—Ç—å –∫–∞–ø—á—Éüî•' if state_data.get('captcha') else 'üî•–í–∫–ª—é—á–∏—Ç—å –∫–∞–ø—á—Éüî•'))\
        .row(
        KeyboardButton('–í—ã–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤') if state_data.get('count') else KeyboardButton('–í–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤'),
        KeyboardButton('–í—ã–∫–ª—é—á–∏—Ç—å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π') if state_data.get('mentions', True) else KeyboardButton('–í–∫–ª—é—á–∏—Ç—å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π')) \
        .row(KeyboardButton('–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—á–∞—Å—Ç–∏—è')) \
        .row(back_button, otmena_button)